## choose the database
USE sql_store;



## select all from certain table, order by
SELECT *
FROM customers
-- WHERE customer_id = 1
ORDER BY first_name;



## set the name of new columns: AS
USE sql_store;
SELECT 	first_name, points, points +100 AS discount_facts
FROM customers;

SELECT name, unit_price, unit_price*1.1 AS "new price"
FROM products;



## distince selection
SELECT DISTINCT state
FROM customers;




## set the conditions when selecting
SELECT *
FROM orders
WHERE order_date >= "2018-01-01" AND order_date < "2019-01-01";

SELECT *
FROM order_items
WHERE order_id = 6 AND unit_price*quantity > 30;

SELECT *
FROM customers
WHERE state IN ("VA","GA");

SELECT *
FROM customers
WHERE state NOT IN ("VA","GA");

SELECT *
FROM customers
WHERE birth_date BETWEEN "1990-01-01" AND "2000-01-01";




## pattern of strings
-- % means unlimited numbers of characters
-- _ means one character
SELECT *
FROM customers
WHERE last_name LIKE "b%";

SELECT *
FROM customers
WHERE last_name LIKE "%b%"; -- selece those with a b inside the string

SELECT *
FROM customers
WHERE last_name LIKE "b____y"; 

SELECT *
FROM customers
WHERE address LIKE "%avenue%" OR address LIKE "%trail%" OR phone LIKE "%9" ;

SELECT *
FROM customers
WHERE phone NOT LIKE "%9" ;

-- regular expression
-- ^ means the beginning of the string, $ means the end
 	e.g. WHERE last_name REGEXP "field$"
-- | means "or" when indicating patterns here
	e.g. WHERE last_name REGEXP "field|mac"
SELECT *
FROM customers
WHERE last_name REGEXP "field" ;

SELECT *
FROM customers
WHERE last_name REGEXP "field|mac";

SELECT *
FROM customers
WHERE last_name REGEXP "field$|mac|rose";

SELECT *
FROM customers
WHERE last_name REGEXP "[i,g,m]e"; 
-- find all that has a "ie" or "ge" or"me" in the celected string

SELECT *
FROM customers
WHERE last_name REGEXP "[a-g]e"; 

-- exercise: 
-- first-name are elka or ambur
SELECT*
FROM customers
WHERE first_name REGEXP "elka|ambur";

-- last name end with ey or on
SELECT*
FROM customers
WHERE last_name REGEXP "ey$|on$";

-- last name start with my or contain se
SELECT*
FROM customers
WHERE last_name REGEXP "^my|se";

-- last contain b followed by r oru
SELECT*
FROM customers
WHERE last_name REGEXP "b[r,u]";




## null
SELECT *
FROM orders
WHERE shipped_date IS NULL;




## change the order/ show it reversely
SELECT *
FROM customers
ORDER BY first_name;

SELECT *
FROM customers
ORDER BY first_name DESC;




## sort first by xx then by yy, ORDER BY xx,yy
SELECT *
FROM customers
ORDER BY state,first_name;

SELECT *
FROM order_items
WHERE order_id = 2
ORDER BY quantity*unit_price DESC;




## limit the result shown
SELECT *
FROM customers
LIMIT 4;

SELECT *
FROM customers
LIMIT 6,3;  -- this means skip first 6, then get 3

SELECT *
FROM customers
ORDER BY points DESC
LIMIT 3;  




## the order of sentences example:
SELECT *
FROM customers
WHERE last_name REGEXP "e"
ORDER BY points
LIMIT 5;





## inner join
SELECT order_id,orders.customer_id
FROM orders
JOIN customers
	ON orders.customer_id=customers.customer_id;

SELECT o.product_id, o.unit_price
FROM order_items o
JOIN products
	ON products.product_id=o.product_id;
    
SELECT *
FROM order_items o
JOIN sql_inventory.products p
	ON p.product_id = o.product_id;
    
USE sql_hr;
SELECT e.employee_id, e,first_name, m.first_name
FROM employees e
JOIN employees m
	ON e.reports_to = m.employee_id; 
    
SELECT order_id, first_name, last_name, os.name
FROM orders o
JOIN customers c
	ON o.customer_id = c.customer_id
JOIn order_statuses os
	ON o.order_id = os.order_status_id;


-- from multiple tables
SELECT o.order_id, c.first_name, c.last_name, os.name AS status
FROM orders o
JOIN customers c
	ON o.customer_id = c.customer_id
JOIN order_statuses os
	ON o.status = os.order_status_id
ORDER BY order_id;

SELECT c.client_id, c.name, p.date, p.amount, pm.name AS method
FROM clients c
JOIN payments p
	ON c.client_id = p.client_id
JOIN payment_methods pm
	ON p.payment_method = pm.payment_method_id
